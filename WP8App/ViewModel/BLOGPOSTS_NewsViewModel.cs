// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   	ViewModel.tt
// Version:		2.0
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls = WPAppStudio.Controls;
using Entities = WPAppStudio.Entities;
using EntitiesBase = WPAppStudio.Entities.Base;
using IServices = WPAppStudio.Services.Interfaces;
using IViewModels = WPAppStudio.ViewModel.Interfaces;
using Localization = WPAppStudio.Localization;
using Repositories = WPAppStudio.Repositories;
using Services = WPAppStudio.Services;
using ViewModelsBase = WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of BLOGPOSTS_News ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class BLOGPOSTS_NewsViewModel : ViewModelsBase.VMBase, IViewModels.IBLOGPOSTS_NewsViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		private readonly IServices.ILockScreenService _lockScreenService;
		private readonly Repositories.IABOUTUS_infoDataSource _aBOUTUS_infoDataSource;
		private readonly Repositories.IBLOGPOSTS_rssfeed _bLOGPOSTS_rssfeed;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="BLOGPOSTS_NewsViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="aBOUTUS_infoDataSource">The A B O U T U S_info Data Source.</param>
        /// <param name="bLOGPOSTS_rssfeed">The B L O G P O S T S_rssfeed.</param>
        public BLOGPOSTS_NewsViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService, IServices.ILockScreenService lockScreenService, Repositories.IABOUTUS_infoDataSource aBOUTUS_infoDataSource, Repositories.IBLOGPOSTS_rssfeed bLOGPOSTS_rssfeed)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
			_lockScreenService = lockScreenService;
			_aBOUTUS_infoDataSource = aBOUTUS_infoDataSource;
			_bLOGPOSTS_rssfeed = bLOGPOSTS_rssfeed;
        }
		
	
		private ObservableCollection<EntitiesBase.RssSearchResult> _bLOGPOSTS_NewsListControlCollection;

        /// <summary>
        /// BLOGPOSTS_NewsListControlCollection property.
        /// </summary>		
        public ObservableCollection<EntitiesBase.RssSearchResult> BLOGPOSTS_NewsListControlCollection
        {
            get
            {
				
                if(_bLOGPOSTS_NewsListControlCollection == null)
					GetBLOGPOSTS_NewsListControlCollectionData();
				return _bLOGPOSTS_NewsListControlCollection;     
            }
            set
            {
                SetProperty(ref _bLOGPOSTS_NewsListControlCollection, value);
            }
        }
	
		private EntitiesBase.RssSearchResult _selectedBLOGPOSTS_NewsListControlCollection;

        /// <summary>
        /// SelectedBLOGPOSTS_NewsListControlCollection property.
        /// </summary>		
        public EntitiesBase.RssSearchResult SelectedBLOGPOSTS_NewsListControlCollection
        {
            get
            {
				return _selectedBLOGPOSTS_NewsListControlCollection;
            }
            set
            {
                _selectedBLOGPOSTS_NewsListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.IBLOGPOSTS_DetailViewModel>(_selectedBLOGPOSTS_NewsListControlCollection);
            }
        }
	
		private Controls.MenuItemData _selectedMenuSection_MenuMenuControl;

        /// <summary>
        /// SelectedMenuSection_MenuMenuControl property.
        /// </summary>		
        public Controls.MenuItemData SelectedMenuSection_MenuMenuControl
        {
            get
            {
				return _selectedMenuSection_MenuMenuControl;
            }
            set
            {
                _selectedMenuSection_MenuMenuControl = value;
                if (value != null)
                    _navigationService.NavigateTo(value);
            }
        }
	
		private string _currentABOUTUS_InfoHtmlControl;

        /// <summary>
        /// CurrentABOUTUS_InfoHtmlControl property.
        /// </summary>		
        public string CurrentABOUTUS_InfoHtmlControl
        {
            get
            {
				
                if(_currentABOUTUS_InfoHtmlControl == null)
					_currentABOUTUS_InfoHtmlControl = _aBOUTUS_infoDataSource.Get();
				return _currentABOUTUS_InfoHtmlControl;     
            }
            set
            {
                SetProperty(ref _currentABOUTUS_InfoHtmlControl, value);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshBLOGPOSTS_NewsListControlCollectionCommand command.
        /// </summary>
        public async void RefreshBLOGPOSTS_NewsListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingBLOGPOSTS_NewsListControlCollection = true;
				var items = await  _bLOGPOSTS_rssfeed.Refresh();
				BLOGPOSTS_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				BLOGPOSTS_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingBLOGPOSTS_NewsListControlCollection = false;
			}
        }
		
		
        private bool _loadingBLOGPOSTS_NewsListControlCollection;
		
        public bool LoadingBLOGPOSTS_NewsListControlCollection
        {
            get { return _loadingBLOGPOSTS_NewsListControlCollection; }
            set { SetProperty(ref _loadingBLOGPOSTS_NewsListControlCollection, value); }
        }

        private ICommand _refreshBLOGPOSTS_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshBLOGPOSTS_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshBLOGPOSTS_NewsListControlCollectionCommand
        {
            get { return _refreshBLOGPOSTS_NewsListControlCollectionCommand = _refreshBLOGPOSTS_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshBLOGPOSTS_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetBLOGPOSTS_NewsListControlCollectionCommand command.
        /// </summary>
        public  void GetBLOGPOSTS_NewsListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetBLOGPOSTS_NewsListControlCollectionData(pageNumber);
        }
		

        private ICommand _getBLOGPOSTS_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the GetBLOGPOSTS_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand GetBLOGPOSTS_NewsListControlCollectionCommand
        {
            get { return _getBLOGPOSTS_NewsListControlCollectionCommand = _getBLOGPOSTS_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetBLOGPOSTS_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechABOUTUS_InfoHtmlControlCommand command.
        /// </summary>
        public  void TextToSpeechABOUTUS_InfoHtmlControlCommandDelegate() 
        {
				_speechService.TextToSpeech(CurrentABOUTUS_InfoHtmlControl);
        }
		

        private ICommand _textToSpeechABOUTUS_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the TextToSpeechABOUTUS_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand TextToSpeechABOUTUS_InfoHtmlControlCommand
        {
            get { return _textToSpeechABOUTUS_InfoHtmlControlCommand = _textToSpeechABOUTUS_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechABOUTUS_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareABOUTUS_InfoHtmlControlCommand command.
        /// </summary>
        public  void ShareABOUTUS_InfoHtmlControlCommandDelegate() 
        {
				_shareService.Share(@"ABOUT US", CurrentABOUTUS_InfoHtmlControl);
        }
		

        private ICommand _shareABOUTUS_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the ShareABOUTUS_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand ShareABOUTUS_InfoHtmlControlCommand
        {
            get { return _shareABOUTUS_InfoHtmlControlCommand = _shareABOUTUS_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(ShareABOUTUS_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartABOUTUS_InfoHtmlControlCommand command.
        /// </summary>
        public  void PinToStartABOUTUS_InfoHtmlControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.IBLOGPOSTS_NewsViewModel), CreateTileInfoABOUTUS_InfoHtmlControl());
        }
		

        private ICommand _pinToStartABOUTUS_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the PinToStartABOUTUS_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand PinToStartABOUTUS_InfoHtmlControlCommand
        {
            get { return _pinToStartABOUTUS_InfoHtmlControlCommand = _pinToStartABOUTUS_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartABOUTUS_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
				_lockScreenService.SetLockScreen("LockScreen-b960fc10-5c97-426b-b78d-6dc981576002.jpg");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new ViewModelsBase.DelegateCommand(SetLockScreenCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the AboutCommand command.
        /// </summary>
        public  void AboutCommandDelegate() 
        {
				_navigationService.NavigateTo<IViewModels.IAboutViewModel>();
        }
		

        private ICommand _aboutCommand;

        /// <summary>
        /// Gets the AboutCommand command.
        /// </summary>
        public ICommand AboutCommand
        {
            get { return _aboutCommand = _aboutCommand ?? new ViewModelsBase.DelegateCommand(AboutCommandDelegate); }
        }

        private async void GetBLOGPOSTS_NewsListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingBLOGPOSTS_NewsListControlCollection = true;
			
				var items = await _bLOGPOSTS_rssfeed.GetData();
                BLOGPOSTS_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				BLOGPOSTS_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingBLOGPOSTS_NewsListControlCollection = false;
			}
		}
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the ABOUTUS_InfoHtmlControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoABOUTUS_InfoHtmlControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = @"ABOUT US",
                Title = @"ABOUT US",
                BackTitle = @"ABOUT US",
                BackContent = CurrentABOUTUS_InfoHtmlControl,
                Count = 0,
                BackgroundImagePath = string.Empty,
                BackBackgroundImagePath = string.Empty,
                LogoPath = "Logo-1ea99746-061b-4dec-a7fe-1eee87957505.png"
            };
            return tileInfo;
        }
    }
}
